import { BaseDto } from 'ws-request-hook';
//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v14.2.0.0 (NJsonSchema v11.1.0.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

/* tslint:disable */
/* eslint-disable */
// ReSharper disable InconsistentNaming



export interface BaseDto {
    eventType?: string;
    requestId?: string;
}

export interface MemberHasLeftDto extends BaseDto {
    memberId?: string;
}

export interface ClientEntersLobbyDto extends BaseDto {
}

export interface ServerPutsClientInLobbyAndBroadcastsToEveryoneDto extends BaseDto {
    allClientIds?: string[];
}

export interface ClientStartsCounter extends BaseDto {
}

export interface CounterBroadcast extends BaseDto {
    startCounter?: boolean;
}

export interface AdminDisplayQuestion extends BaseDto {
    gameId?: string;
    questionId?: string;
}

export interface ServerSendsCurrentQuestionId extends BaseDto {
    gameId?: string;
    questionId?: string;
    questionOptions?: QuestionOptionDto[];
}

export interface QuestionOptionDto {
    optionText?: string;
    optionShape?: string;
    optionId?: string;
}

export interface ClientLoadPlayersDto extends BaseDto {
    topic?: string;
    gameId?: string;
}

export interface ClientLoadsPlayersNumberDto extends BaseDto {
    topic?: string;
    gameId?: string;
}

export interface ServerSendsInitialPlayers extends BaseDto {
    players?: number;
}

export interface ClientRetrieveAvatarDto extends BaseDto {
    gameId?: string;
}

export interface ServerSendsAvatarList extends BaseDto {
    paths?: string[];
}

export interface ServerConfirmsDto extends BaseDto {
    success?: boolean;
}

export interface ServerSendsErrorMessageDto extends BaseDto {
    error?: string;
}

export interface AdminAskCurrentQuestionDto extends BaseDto {
    gameId?: string;
}

export interface ServerSendsCurrentQuestionForAdmin extends BaseDto {
    questionId?: string;
    questionText?: string;
    questionOptions?: QuestionOptionDto[];
    success?: boolean;
    isNextQuestion?: boolean;
}

export interface AdminCreatesGameDto extends BaseDto {
    name?: string;
}

export interface ServerConfirmsGameDto extends BaseDto {
    id?: string;
    name?: string;
    success?: boolean;
}

export interface ClientAddsPlayerInfoDto extends BaseDto {
    id?: string;
    gameId?: string | undefined;
    nickname?: string;
    avatarId?: string;
}

export interface ServerUpdatePlayersDto extends BaseDto {
    players?: number;
    avatars?: string[];
}

export interface ServerUpdateJoinPlayersDto extends BaseDto {
    players?: PlayerInfoDto[];
}

export interface PlayerInfoDto {
    id?: string;
    gameId?: string | undefined;
    nickname?: string;
    avatarId?: string;
}

/** Available eventType constants */
export enum StringConstants {
    MemberHasLeftDto = "MemberHasLeftDto",
    ClientEntersLobbyDto = "ClientEntersLobbyDto",
    ServerPutsClientInLobbyAndBroadcastsToEveryoneDto = "ServerPutsClientInLobbyAndBroadcastsToEveryoneDto",
    ClientStartsCounter = "ClientStartsCounter",
    CounterBroadcast = "CounterBroadcast",
    AdminDisplayQuestion = "AdminDisplayQuestion",
    ServerSendsCurrentQuestionId = "ServerSendsCurrentQuestionId",
    ClientLoadPlayersDto = "ClientLoadPlayersDto",
    ClientLoadsPlayersNumberDto = "ClientLoadsPlayersNumberDto",
    ServerSendsInitialPlayers = "ServerSendsInitialPlayers",
    ClientRetrieveAvatarDto = "ClientRetrieveAvatarDto",
    ServerSendsAvatarList = "ServerSendsAvatarList",
    ServerConfirmsDto = "ServerConfirmsDto",
    ServerSendsErrorMessageDto = "ServerSendsErrorMessageDto",
    AdminAskCurrentQuestionDto = "AdminAskCurrentQuestionDto",
    ServerSendsCurrentQuestionForAdmin = "ServerSendsCurrentQuestionForAdmin",
    AdminCreatesGameDto = "AdminCreatesGameDto",
    ServerConfirmsGameDto = "ServerConfirmsGameDto",
    ClientAddsPlayerInfoDto = "ClientAddsPlayerInfoDto",
    ServerUpdatePlayersDto = "ServerUpdatePlayersDto",
    ServerUpdateJoinPlayersDto = "ServerUpdateJoinPlayersDto",
}

